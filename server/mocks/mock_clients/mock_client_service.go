// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-apps/server/clients (interfaces: ClientService)

// Package mock_clients is a generated GoMock package.
package mock_clients

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clients "github.com/mattermost/mattermost-plugin-apps/server/clients"
)

// MockClientService is a mock of ClientService interface.
type MockClientService struct {
	ctrl     *gomock.Controller
	recorder *MockClientServiceMockRecorder
}

// MockClientServiceMockRecorder is the mock recorder for MockClientService.
type MockClientServiceMockRecorder struct {
	mock *MockClientService
}

// NewMockClientService creates a new mock instance.
func NewMockClientService(ctrl *gomock.Controller) *MockClientService {
	mock := &MockClientService{ctrl: ctrl}
	mock.recorder = &MockClientServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientService) EXPECT() *MockClientServiceMockRecorder {
	return m.recorder
}

// NewClient4 mocks base method.
func (m *MockClientService) NewClient4(arg0 string) clients.Client4 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClient4", arg0)
	ret0, _ := ret[0].(clients.Client4)
	return ret0
}

// NewClient4 indicates an expected call of NewClient4.
func (mr *MockClientServiceMockRecorder) NewClient4(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClient4", reflect.TypeOf((*MockClientService)(nil).NewClient4), arg0)
}
